import { useContext, useState } from "react";
import { Trades } from "../ExpenseTrackerApp/ExpenseTrackerApp";
import NavBar from "../Navbar/Navbar";
import Input from "../Inputs/Input";
import { Listbox, Transition } from "@headlessui/react";
import { CheckIcon } from "@heroicons/react/solid";
import moment from "moment";

const icons = [
  {
    name: "recurringbill",
    icon: (
      <svg
        width="24"
        height="27"
        viewBox="0 0 24 27"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M23 22C22.7348 22 22.4804 22.1054 22.2929 22.2929C22.1054 22.4804 22 22.7348 22 23C21.9986 23.3507 21.905 23.6949 21.7286 23.9981C21.5521 24.3012 21.2991 24.5526 20.9948 24.7271C20.6906 24.9015 20.3458 24.9929 19.995 24.992C19.6443 24.9912 19.3 24.8981 18.9966 24.7221C18.6932 24.5461 18.4414 24.2935 18.2665 23.9895C18.0916 23.6855 17.9997 23.3408 18 22.9901C18.0004 22.6393 18.0929 22.2949 18.2685 21.9912C18.444 21.6875 18.6963 21.4354 19 21.26C18.9719 21.4653 19.0083 21.6743 19.1042 21.858C19.2001 22.0418 19.3506 22.1912 19.5351 22.2856C19.7196 22.38 19.9288 22.4148 20.1339 22.3852C20.339 22.3555 20.5298 22.2628 20.68 22.12L22.09 20.71C22.1837 20.617 22.2581 20.5064 22.3089 20.3846C22.3597 20.2627 22.3858 20.132 22.3858 20C22.3858 19.868 22.3597 19.7373 22.3089 19.6154C22.2581 19.4936 22.1837 19.383 22.09 19.29L20.68 17.88C20.587 17.7863 20.4764 17.7119 20.3546 17.6611C20.2327 17.6104 20.102 17.5842 19.97 17.5842C19.838 17.5842 19.7073 17.6104 19.5854 17.6611C19.4636 17.7119 19.353 17.7863 19.26 17.88C19.1082 18.0393 19.0132 18.2442 18.9897 18.463C18.9662 18.6817 19.0155 18.9021 19.13 19.09C18.3945 19.2539 17.7202 19.6223 17.1848 20.1526C16.6495 20.683 16.2749 21.3538 16.1041 22.0877C15.9333 22.8217 15.9733 23.589 16.2195 24.3012C16.4657 25.0134 16.9081 25.6416 17.4958 26.1133C18.0834 26.5851 18.7923 26.8813 19.5409 26.9678C20.2895 27.0543 21.0473 26.9276 21.727 26.6022C22.4067 26.2769 22.9807 25.7661 23.3828 25.1288C23.785 24.4915 23.9989 23.7536 24 23C24 22.7348 23.8946 22.4804 23.7071 22.2929C23.5196 22.1054 23.2652 22 23 22Z"
          fill="#7F3DFF"
        />
        <path
          d="M18.58 2.53001C18.1448 2.26116 17.648 2.10809 17.1369 2.08534C16.6258 2.06259 16.1174 2.17091 15.66 2.40001L15.36 2.55001C15.2311 2.60796 15.0913 2.63792 14.95 2.63792C14.8087 2.63792 14.6689 2.60796 14.54 2.55001L11.11 1.21001C10.3972 0.926133 9.60278 0.926133 8.89 1.21001L5.46 2.58001C5.33108 2.63796 5.19134 2.66792 5.05 2.66792C4.90866 2.66792 4.76892 2.63796 4.64 2.58001L4.34 2.43001C3.88519 2.20291 3.38014 2.09511 2.87224 2.11672C2.36435 2.13834 1.87028 2.28866 1.43641 2.55358C1.00254 2.8185 0.643112 3.18933 0.391856 3.63125C0.1406 4.07317 0.0057622 4.57169 0 5.08001V20C0 21.3261 0.526784 22.5979 1.46447 23.5355C2.40215 24.4732 3.67392 25 5 25H14.38C14.136 24.3611 14.0073 23.6839 14 23V22.92C14.0016 21.843 14.2931 20.7864 14.8438 19.8609C15.3946 18.9354 16.1842 18.1752 17.13 17.66C17.2689 17.1773 17.5268 16.7372 17.88 16.38L18 16.27C18.1894 16.1032 18.3974 15.9589 18.62 15.84C18.9872 15.6535 19.3889 15.5445 19.8 15.52H20V5.08001C20 4.56923 19.8695 4.06692 19.621 3.62067C19.3725 3.17443 19.0142 2.79901 18.58 2.53001ZM12 18H6C5.73478 18 5.48043 17.8946 5.29289 17.7071C5.10536 17.5196 5 17.2652 5 17C5 16.7348 5.10536 16.4804 5.29289 16.2929C5.48043 16.1054 5.73478 16 6 16H12C12.2652 16 12.5196 16.1054 12.7071 16.2929C12.8946 16.4804 13 16.7348 13 17C13 17.2652 12.8946 17.5196 12.7071 17.7071C12.5196 17.8946 12.2652 18 12 18ZM14 12H6C5.73478 12 5.48043 11.8946 5.29289 11.7071C5.10536 11.5196 5 11.2652 5 11C5 10.7348 5.10536 10.4804 5.29289 10.2929C5.48043 10.1054 5.73478 10 6 10H14C14.2652 10 14.5196 10.1054 14.7071 10.2929C14.8946 10.4804 15 10.7348 15 11C15 11.2652 14.8946 11.5196 14.7071 11.7071C14.5196 11.8946 14.2652 12 14 12Z"
          fill="#7F3DFF"
        />
      </svg>
    ),
    color: "#7F3DFF",
  },
  {
    name: "restaurant",
    icon: (
      <svg
        width="22"
        height="24"
        viewBox="0 0 22 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17 0C15.6739 0 14.4021 0.526784 13.4645 1.46447C12.5268 2.40215 12 3.67392 12 5V7C11.9998 8.15265 12.3978 9.26999 13.1267 10.1629C13.8556 11.0558 14.8706 11.6695 16 11.9V14.18C15.4165 14.3863 14.911 14.7681 14.5529 15.2729C14.1949 15.7778 14.0017 16.3811 14 17V21C14 21.7956 14.3161 22.5587 14.8787 23.1213C15.4413 23.6839 16.2044 24 17 24C17.7956 24 18.5587 23.6839 19.1213 23.1213C19.6839 22.5587 20 21.7956 20 21V17C19.9983 16.3811 19.8051 15.7778 19.4471 15.2729C19.089 14.7681 18.5835 14.3863 18 14.18V11.9C19.1294 11.6695 20.1444 11.0558 20.8733 10.1629C21.6022 9.26999 22.0002 8.15265 22 7V5C22 3.67392 21.4732 2.40215 20.5355 1.46447C19.5979 0.526784 18.3261 0 17 0Z"
          fill="#FD3C4A"
        />
        <path
          d="M9 0C8.73478 0 8.48043 0.105357 8.29289 0.292893C8.10536 0.48043 8 0.734784 8 1V5C8 5.26522 7.89464 5.51957 7.70711 5.70711C7.51957 5.89464 7.26522 6 7 6C6.73478 6 6.48043 5.89464 6.29289 5.70711C6.10536 5.51957 6 5.26522 6 5V1C6 0.734784 5.89464 0.48043 5.70711 0.292893C5.51957 0.105357 5.26522 0 5 0C4.73478 0 4.48043 0.105357 4.29289 0.292893C4.10536 0.48043 4 0.734784 4 1V5C4 5.26522 3.89464 5.51957 3.70711 5.70711C3.51957 5.89464 3.26522 6 3 6C2.73478 6 2.48043 5.89464 2.29289 5.70711C2.10536 5.51957 2 5.26522 2 5V1C2 0.734784 1.89464 0.48043 1.70711 0.292893C1.51957 0.105357 1.26522 0 1 0C0.734784 0 0.48043 0.105357 0.292893 0.292893C0.105357 0.48043 1.04228e-07 0.734784 1.04228e-07 1V7C-0.000235151 8.15265 0.397783 9.26999 1.12669 10.1629C1.8556 11.0558 2.87064 11.6695 4 11.9V14.18C3.41645 14.3863 2.911 14.7681 2.55294 15.2729C2.19488 15.7778 2.00174 16.3811 2 17V21C2 21.7956 2.31607 22.5587 2.87868 23.1213C3.44129 23.6839 4.20435 24 5 24C5.79565 24 6.55871 23.6839 7.12132 23.1213C7.68393 22.5587 8 21.7956 8 21V17C7.99826 16.3811 7.80512 15.7778 7.44706 15.2729C7.089 14.7681 6.58355 14.3863 6 14.18V11.9C7.12936 11.6695 8.1444 11.0558 8.87331 10.1629C9.60222 9.26999 10.0002 8.15265 10 7V1C10 0.734784 9.89464 0.48043 9.70711 0.292893C9.51957 0.105357 9.26522 0 9 0Z"
          fill="#FD3C4A"
        />
      </svg>
    ),
    color: "#FD3C4A",
  },
  {
    name: "taxation",
    icon: (
      <svg
        width="20"
        height="25"
        viewBox="0 0 20 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17.07 9.94002C16.3883 9.24967 15.6061 8.6664 14.75 8.21002C14.5261 8.08475 14.2958 7.97127 14.06 7.87002C13.5847 7.65505 13.0931 7.47784 12.59 7.34002L12.11 7.23002C11.76 7.16002 11.42 7.11002 11.11 7.07002H10.64H10.4C10.1437 7.05023 9.88628 7.05023 9.63 7.07002H9.41H9.04H8.9C8.56384 7.09888 8.22984 7.14898 7.9 7.22002L7.43 7.33002C6.93124 7.46732 6.44326 7.64113 5.97 7.85002C5.73 7.96002 5.49 8.07002 5.27 8.19002C3.67731 9.04506 2.34618 10.3158 1.4182 11.8672C0.490226 13.4185 0.00011285 15.1923 0 17V20C0 21.3261 0.526784 22.5979 1.46447 23.5356C2.40215 24.4732 3.67392 25 5 25H15C16.3261 25 17.5979 24.4732 18.5355 23.5356C19.4732 22.5979 20 21.3261 20 20V17C20.0061 15.6874 19.7501 14.3869 19.247 13.1745C18.7438 11.9622 18.0037 10.8625 17.07 9.94002ZM9.5 15H10.5C11.163 14.9337 11.8253 15.1335 12.341 15.5555C12.8567 15.9774 13.1837 16.587 13.25 17.25C13.3163 17.9131 13.1165 18.5753 12.6945 19.091C12.2726 19.6067 11.663 19.9337 11 20C11 20.2652 10.8946 20.5196 10.7071 20.7071C10.5196 20.8947 10.2652 21 10 21C9.73478 21 9.48043 20.8947 9.29289 20.7071C9.10536 20.5196 9 20.2652 9 20H8C7.73478 20 7.48043 19.8947 7.29289 19.7071C7.10536 19.5196 7 19.2652 7 19C7 18.7348 7.10536 18.4804 7.29289 18.2929C7.48043 18.1054 7.73478 18 8 18H10.5C10.6326 18 10.7598 17.9473 10.8536 17.8536C10.9473 17.7598 11 17.6326 11 17.5C11 17.3674 10.9473 17.2402 10.8536 17.1465C10.7598 17.0527 10.6326 17 10.5 17H9.5C8.88002 17.0006 8.28193 16.7709 7.82183 16.3553C7.36173 15.9398 7.07245 15.3681 7.01014 14.7513C6.94784 14.1344 7.11695 13.5164 7.48466 13.0173C7.85236 12.5181 8.39242 12.1734 9 12.05V12C9 11.7348 9.10536 11.4805 9.29289 11.2929C9.48043 11.1054 9.73478 11 10 11C10.2652 11 10.5196 11.1054 10.7071 11.2929C10.8946 11.4805 11 11.7348 11 12H12C12.2652 12 12.5196 12.1054 12.7071 12.2929C12.8946 12.4804 13 12.7348 13 13C13 13.2652 12.8946 13.5196 12.7071 13.7071C12.5196 13.8947 12.2652 14 12 14H9.5C9.36739 14 9.24021 14.0527 9.14645 14.1465C9.05268 14.2402 9 14.3674 9 14.5C9 14.6326 9.05268 14.7598 9.14645 14.8536C9.24021 14.9473 9.36739 15 9.5 15Z"
          fill="#00A86B"
        />
        <path
          d="M15.46 3.61001L15.07 6.13001L14.88 6.00001C14.3243 5.74747 13.7491 5.54013 13.16 5.38001C12.128 5.11465 11.0655 4.98687 10 5.00001C8.93299 5.00347 7.87089 5.14464 6.84001 5.42001C6.25836 5.58301 5.69003 5.79028 5.14001 6.04001L4.93001 6.14001L4.54001 3.61001C4.45983 3.08716 4.51931 2.5524 4.71243 2.05995C4.90556 1.5675 5.22546 1.13487 5.63969 0.805912C6.05393 0.476957 6.54779 0.263377 7.07118 0.186826C7.59458 0.110274 8.12891 0.173472 8.62001 0.370013L9.62001 0.770013C9.8576 0.864637 10.1224 0.864637 10.36 0.770013L11.36 0.370013C11.8511 0.173472 12.3854 0.110274 12.9088 0.186826C13.4322 0.263377 13.9261 0.476957 14.3403 0.805912C14.7546 1.13487 15.0745 1.5675 15.2676 2.05995C15.4607 2.5524 15.5202 3.08716 15.44 3.61001H15.46Z"
          fill="#00A86B"
        />
      </svg>
    ),
    color: "#00A86B",
  },
  {
    name: "car",
    icon: (
      <svg
        width="28"
        height="24"
        viewBox="0 0 28 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M25.0001 10H23.4901C23.2682 10.0095 23.0495 9.94485 22.8684 9.8163C22.6874 9.68774 22.5542 9.50258 22.4901 9.29L20.8101 3.56C20.4995 2.52723 19.8633 1.62257 18.9964 0.980985C18.1296 0.339401 17.0785 -0.00470741 16.0001 1.92432e-06H7.71006C6.71152 0.000234324 5.73593 0.29944 4.90895 0.859072C4.08198 1.4187 3.44151 2.21313 3.07006 3.14L0.220056 10.27C0.0724756 10.6248 -0.00233698 11.0057 5.56271e-05 11.39V16C9.13489e-05 17.1717 0.411613 18.3062 1.16279 19.2054C1.91396 20.1046 2.95708 20.7114 4.11006 20.92C4.31774 21.7873 4.8093 22.5603 5.50664 23.1162C6.20397 23.6721 7.06708 23.9791 7.95884 23.9882C8.85059 23.9974 9.71985 23.7084 10.4285 23.1669C11.1371 22.6255 11.6445 21.8628 11.8701 21H16.1301C16.3538 21.856 16.855 22.6137 17.5553 23.1544C18.2555 23.6952 19.1153 23.9885 20.0001 23.9885C20.8848 23.9885 21.7446 23.6952 22.4449 23.1544C23.1451 22.6137 23.6463 21.856 23.8701 21H25.0001C25.7957 21 26.5588 20.6839 27.1214 20.1213C27.684 19.5587 28.0001 18.7957 28.0001 18V13C28.0001 12.2044 27.684 11.4413 27.1214 10.8787C26.5588 10.3161 25.7957 10 25.0001 10ZM8.00006 22C7.60449 22 7.21781 21.8827 6.88892 21.6629C6.56002 21.4432 6.30367 21.1308 6.1523 20.7654C6.00092 20.3999 5.96131 19.9978 6.03849 19.6098C6.11566 19.2219 6.30614 18.8655 6.58584 18.5858C6.86555 18.3061 7.22191 18.1156 7.60988 18.0384C7.99784 17.9613 8.39997 18.0009 8.76542 18.1522C9.13087 18.3036 9.44323 18.56 9.66299 18.8889C9.88276 19.2178 10.0001 19.6044 10.0001 20C10.0001 20.5304 9.78934 21.0391 9.41427 21.4142C9.0392 21.7893 8.53049 22 8.00006 22ZM13.0001 10H2.47006L4.92006 3.89C5.14236 3.33181 5.52716 2.85322 6.02461 2.51624C6.52205 2.17927 7.10922 1.99942 7.71006 2H13.0001V10ZM15.0001 10V2H16.0001C16.65 1.9944 17.2842 2.20004 17.8072 2.58598C18.3302 2.97192 18.7137 3.51729 18.9001 4.14L20.6101 9.86C20.6258 9.90839 20.6459 9.95525 20.6701 10H15.0001ZM20.0001 22C19.6045 22 19.2178 21.8827 18.8889 21.6629C18.56 21.4432 18.3037 21.1308 18.1523 20.7654C18.0009 20.3999 17.9613 19.9978 18.0385 19.6098C18.1157 19.2219 18.3061 18.8655 18.5858 18.5858C18.8655 18.3061 19.2219 18.1156 19.6099 18.0384C19.9978 17.9613 20.4 18.0009 20.7654 18.1522C21.1309 18.3036 21.4432 18.56 21.663 18.8889C21.8828 19.2178 22.0001 19.6044 22.0001 20C22.0001 20.5304 21.7893 21.0391 21.4143 21.4142C21.0392 21.7893 20.5305 22 20.0001 22ZM26.0001 16H25.0001C24.7348 16 24.4805 15.8946 24.2929 15.7071C24.1054 15.5196 24.0001 15.2652 24.0001 15C24.0001 14.7348 24.1054 14.4804 24.2929 14.2929C24.4805 14.1054 24.7348 14 25.0001 14H26.0001V16Z"
          fill="#0077FF"
        />
      </svg>
    ),
    color: "#0077FF",
  },
  {
    name: "shoppingbag",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M21 16H3.00002H2.58002L3.38002 20C3.61055 21.1294 4.2242 22.1444 5.11711 22.8733C6.01003 23.6022 7.12736 24.0002 8.28002 24H15.72C16.8727 24.0002 17.99 23.6022 18.8829 22.8733C19.7758 22.1444 20.3895 21.1294 20.62 20L21.42 16H21ZM11 21C11 21.2652 10.8947 21.5196 10.7071 21.7071C10.5196 21.8946 10.2652 22 10 22C9.7348 22 9.48045 21.8946 9.29291 21.7071C9.10537 21.5196 9.00002 21.2652 9.00002 21V19C9.00002 18.7348 9.10537 18.4804 9.29291 18.2929C9.48045 18.1054 9.7348 18 10 18C10.2652 18 10.5196 18.1054 10.7071 18.2929C10.8947 18.4804 11 18.7348 11 19V21ZM15 21C15 21.2652 14.8947 21.5196 14.7071 21.7071C14.5196 21.8946 14.2652 22 14 22C13.7348 22 13.4804 21.8946 13.2929 21.7071C13.1054 21.5196 13 21.2652 13 21V19C13 18.7348 13.1054 18.4804 13.2929 18.2929C13.4804 18.1054 13.7348 18 14 18C14.2652 18 14.5196 18.1054 14.7071 18.2929C14.8947 18.4804 15 18.7348 15 19V21Z"
          fill="#FCAC12"
        />
        <path
          d="M21 6H19V5C19 4.34339 18.8707 3.69321 18.6194 3.08658C18.3681 2.47995 17.9998 1.92876 17.5355 1.46447C17.0712 1.00017 16.52 0.631876 15.9134 0.380602C15.3068 0.129329 14.6566 0 14 0H10C8.67392 0 7.40215 0.526784 6.46447 1.46447C5.52678 2.40215 5 3.67392 5 5V6H3C2.20435 6 1.44129 6.31607 0.87868 6.87868C0.316071 7.44129 0 8.20435 0 9V11C0 11.7956 0.316071 12.5587 0.87868 13.1213C1.44129 13.6839 2.20435 14 3 14H21C21.7956 14 22.5587 13.6839 23.1213 13.1213C23.6839 12.5587 24 11.7956 24 11V9C24 8.20435 23.6839 7.44129 23.1213 6.87868C22.5587 6.31607 21.7956 6 21 6V6ZM7 5C7 4.20435 7.31607 3.44129 7.87868 2.87868C8.44129 2.31607 9.20435 2 10 2H14C14.7956 2 15.5587 2.31607 16.1213 2.87868C16.6839 3.44129 17 4.20435 17 5V6H7V5Z"
          fill="#FCAC12"
        />
      </svg>
    ),
    color: "#FCAC12",
  },
];

const Expense = ({ setTransactionPage }) => {
  const transaction = useContext(Trades);
  const { trades, setTrades } = transaction.trade;
  const { notification, setNotification } = transaction.notifications;
  // console.log(transaction);
  const [value, setValue] = useState("");
  const [description, setDescription] = useState("");
  const [selected, setSelected] = useState(transaction.tradeTypes[0]);
  const [showTextArea, setShowTextArea] = useState(false);

  const submitHandler = (event) => {
    event.preventDefault();
    if (showTextArea) {
      saveTradeHandler();
    } else {
      if (value.trim() !== "") {
        setShowTextArea(true);
      } else {
        alert("Please enter expense");
      }
    }
  };

  const saveTradeHandler = () => {
    const Data = {
      transaction: parseInt(-value),
      category: selected,
      time: moment(),
      description: description,
    };
    setTrades([...trades, Data]);
    setTransactionPage("");
    setNotification([
      ...notification,
      {
        title: (
          <>
            New<span className={`${value > 0 ? "text-Green-100" : "text-Red-100"}`}> transaction {value}</span> aded! check it in Home page , in <span className="text-Violet-100">{Data.category}</span> category
          </>
        ),
        time: Data.time,
      },
    ]);
  };

  return (
    <>
      <div className="bg-Red-100 w-full h-full text-Light-100">
        <NavBar label="Expense" event={() => setTransactionPage("")} />
        <div className="w-full h-full py-16 mx-auto flex flex-col justify-end">
          <h3 className="text-Red-20 ml-4">How much</h3>
          <h1 className="text-5xl ml-4">$ {value ? value : 0}</h1>
          <form
            onSubmit={submitHandler}
            className="relative -bottom-5 bg-Light-100 p-5 rounded-t-3xl"
          >
            {showTextArea ? (
              <textarea
                onChange={(e) => setDescription(e.target.value)}
                value={description}
                placeholder="Enter discription.This field is not required"
                rows={3}
                className="resize-none md:w-[720px] w-full outline-none rounded-2xl px-5 py-3 border border-Light-20 focus:border-Violet-100 text-Dark-100"
              />
            ) : (
              <>
                <Input
                  placeholder="Expense value"
                  type="number"
                  value={value}
                  changeEvent={setValue}
                />
                <div className="md:w-[720px] w-full z-40">
                  <Listbox value={selected} onChange={setSelected}>
                    <div className="relative mt-1">
                      <Listbox.Button className="flex justify-between outline-none rounded-2xl pl-5 py-3 border border-Light-20 focus:border-Violet-100 relative w-full pr-3 text-left">
                        <span className="flex">
                          <span>
                            {
                              icons.filter((icon) => icon.name === selected)[0]
                                .icon
                            }
                          </span>
                          <span className="truncate text-Dark-25 ml-3">
                            {selected}
                          </span>
                        </span>
                        <span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-6 w-6 inline text-Dark-25"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                            strokeWidth={2}
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              d="M8 9l4-4 4 4m0 6l-4 4-4-4"
                            />
                          </svg>
                        </span>
                      </Listbox.Button>
                      <Transition>
                        <Listbox.Options className="w-full py-1 mt-1 bg-Light-100 shadow-sm border border-[#F9F7FE] rounded-2xl overflow-scroll absolute -top-56">
                          {transaction.tradeTypes.map((person, personIdx) => (
                            <Listbox.Option
                              key={personIdx}
                              className={({ active }) =>
                                `cursor-default select-none relative py-2 pl-10 pr-4 ${
                                  active
                                    ? "text-Violet-100 bg-[#F9F7FE]"
                                    : "text-Dark-100"
                                }`
                              }
                              value={person}
                            >
                              {({ selected, active }) => (
                                <div className="flex justify-center items-center">
                                  <span className="mr-4">
                                    {
                                      icons.filter(
                                        (icon) => icon.name === person
                                      )[0].icon
                                    }
                                  </span>
                                  <span
                                    className={`${
                                      selected
                                        ? "font-medium text-Violet-100"
                                        : "font-normal"
                                    } block truncate`}
                                  >
                                    {person}
                                  </span>
                                  {selected ? (
                                    <span
                                      className={`${
                                        active
                                          ? "text-Violet-100"
                                          : "text-Violet-100"
                                      }
                                absolute inset-y-0 left-0 flex items-center pl-3`}
                                    >
                                      <CheckIcon
                                        className="w-5 h-5"
                                        aria-hidden="true"
                                      />
                                    </span>
                                  ) : null}
                                </div>
                              )}
                            </Listbox.Option>
                          ))}
                        </Listbox.Options>
                      </Transition>
                    </div>
                  </Listbox>
                </div>
              </>
            )}
            <button
              type="submit"
              onClick={submitHandler}
              className={` ${
                value
                  ? "bg-Violet-100 text-Light-80"
                  : "bg-Light-40 text-Dark-25 cursor-not-allowed"
              }
              w-full md:w-[720px] py-3 text-lg rounded-2xl mt-3`}
            >
              Submit
            </button>
          </form>
        </div>
      </div>
    </>
  );
};

export default Expense;
